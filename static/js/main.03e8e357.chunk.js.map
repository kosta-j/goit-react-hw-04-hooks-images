{"version":3,"sources":["components/Button/Button.module.css","components/Modal/Modal.module.css","components/Loader/Loader.module.css","components/Wrapper/Wrapper.module.css","components/ImageGallery/ImageGallery.module.css","services/apiServise.js","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Searchbar/Searchbar.jsx","components/Wrapper/Wrapper.jsx","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","apiService","query","page","axios","get","Button","onClick","className","s","wrapper","type","Loader","modalRoot","document","querySelector","Modal","onClose","children","handleKeydown","e","code","useEffect","window","addEventListener","removeEventListener","createPortal","Overlay","currentTarget","target","ImageGalleryItem","props","hit","webformatURL","tags","showModal","item","width","src","alt","ImageGalleryItemImage","ImageGallery","useState","hits","setHits","setPage","loader","setLoader","modal","setModal","modalHit","setModalHit","prev","value","ref","useRef","current","usePrevious","autoScroll","scrollTo","top","documentElement","scrollHeight","behavior","data","loadImages","a","response","prevHits","length","toast","warn","console","log","error","undefined","largeImageURL","map","id","prevPage","Searchbar","onSubmit","setQuery","reset","SearchForm","preventDefault","trim","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Wrapper","text","autoClose","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03e8e357.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Button_wrapper__23guh\",\"Button\":\"Button_Button__3-F_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__o8vT2\",\"Modal\":\"Modal_Modal__W-uoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__3MIbd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Wrapper_list__2drDk\",\"link\":\"Wrapper_link__3c9e0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3-2av\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__2TbT9\",\"ImageGalleryItemImage\":\"ImageGallery_ImageGalleryItemImage__27p9I\"};","import axios from 'axios';\r\n\r\nconst API_KEY = '22389180-c3e3825fb04f5ed43216d445d';\r\nconst URL = 'https://pixabay.com/api/?q=';\r\n\r\nfunction apiService(query, page) {\r\n  return axios.get(\r\n    `${URL}${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n}\r\n\r\nexport default apiService;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <button type=\"button\" className={s.Button} onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\nexport default Button;\r\n","import LoaderInstance from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './Loader.module.css';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <LoaderInstance />;\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nfunction Modal({ onClose, children }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeydown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeydown);\r\n    };\r\n  });\r\n\r\n  function handleKeydown(e) {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  function handleBackdropClick(e) {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleBackdropClick}>\r\n      <div className={s.Modal}>{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Modal;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.css';\r\n\r\nfunction ImageGalleryItem(props) {\r\n  const { webformatURL, tags } = props.hit;\r\n  const { showModal } = props;\r\n\r\n  return (\r\n    <li className={s.item}>\r\n      <img\r\n        width=\"600\"\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className={s.ImageGalleryItemImage}\r\n        onClick={() => showModal(props.hit)}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  hit: PropTypes.object,\r\n  showModal: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport apiService from '../../services/apiServise';\r\nimport Button from '../Button/Button';\r\nimport Loader from '../Loader/Loader';\r\nimport Modal from '../Modal/Modal';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\n\r\nfunction ImageGallery({ query }) {\r\n  const [hits, setHits] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [loader, setLoader] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [modalHit, setModalHit] = useState({});\r\n\r\n  function usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n  }\r\n\r\n  const prev = usePrevious({ query, page });\r\n\r\n  useEffect(() => {\r\n    if (!query || prev === undefined) {\r\n      return;\r\n    }\r\n\r\n    if (prev.page !== page && page > 1) {\r\n      loadImages();\r\n    }\r\n\r\n    if (prev.query !== query) {\r\n      resetState();\r\n      loadImages();\r\n    }\r\n\r\n    async function loadImages() {\r\n      try {\r\n        setLoader(true);\r\n\r\n        const response = await apiService(query, page);\r\n\r\n        if (prev.page !== page && page > 1) {\r\n          setHits(prevHits => [...prevHits, ...response.data.hits]);\r\n          autoScroll();\r\n        } else {\r\n          setHits(response.data.hits);\r\n        }\r\n\r\n        if (response.data.hits.length === 0) {\r\n          return toast.warn('Oops, such item has not found');\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        return toast.error('Error while loading data. Try again later');\r\n      } finally {\r\n        setLoader(false);\r\n      }\r\n    }\r\n  }, [page, prev, query]);\r\n\r\n  function autoScroll() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  function incrementPage() {\r\n    setPage(prevPage => prevPage + 1);\r\n  }\r\n\r\n  function resetState() {\r\n    setHits([]);\r\n    setPage(1);\r\n  }\r\n\r\n  function showModal(data) {\r\n    setModal(true);\r\n    setModalHit(data);\r\n  }\r\n\r\n  function hideModal() {\r\n    setModal(false);\r\n    setModalHit({});\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      {loader && <Loader />}\r\n      {modal && (\r\n        <Modal onClose={hideModal}>\r\n          <img src={modalHit.largeImageURL} alt={modalHit.tags} />\r\n        </Modal>\r\n      )}\r\n      <ul className={s.ImageGallery}>\r\n        {hits.map(hit => (\r\n          <ImageGalleryItem\r\n            key={hit.id}\r\n            hit={hit}\r\n            className={s.ImageGalleryItem}\r\n            showModal={showModal}\r\n          />\r\n        ))}\r\n      </ul>\r\n      {hits.length >= 12 && <Button onClick={incrementPage} />}\r\n    </main>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  query: PropTypes.string,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport s from './Searchbar.module.css';\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setQuery(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (query.trim() === '') {\r\n      return toast.warn('Empty request - please input a query');\r\n    }\r\n    onSubmit(query);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Searchbar;\r\n","import { useState } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport s from './Wrapper.module.css';\r\n\r\nfunction Wrapper() {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const updateQuery = text => {\r\n    setQuery(text);\r\n  };\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <Searchbar onSubmit={updateQuery} />\r\n      <ImageGallery query={query} />\r\n      <ToastContainer autoClose={3000} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wrapper;\r\n","import Wrapper from './components/Wrapper/Wrapper';\n\nfunction App() {\n  return <Wrapper />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3-Iep\",\"SearchForm\":\"Searchbar_SearchForm__ePhlF\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2xxiD\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3abaf\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3zCUF\"};"],"sourceRoot":""}